name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  frontend:
    name: Frontend Tests & Build
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Build application
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/

  backend:
    name: Backend Tests & Lint
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: ticket_manager_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3.0'
        bundler-cache: true
        working-directory: ./backend
    
    - name: Setup database
      env:
        RAILS_ENV: test
        CI: true
        DATABASE_URL: mysql2://root@127.0.0.1:3306/ticket_manager_test
      run: |
        bundle exec rails db:create
        bundle exec rails db:migrate
    
    - name: Run tests
      env:
        RAILS_ENV: test
        CI: true
        DATABASE_URL: mysql2://root@127.0.0.1:3306/ticket_manager_test
      run: bundle exec rspec
    
    - name: Run RuboCop
      run: bundle exec rubocop
    
    - name: Run Brakeman security scan
      run: |
        echo "Brakemanセキュリティスキャンを実行中..."
        set +e  # Disable exit on error
        bundle exec brakeman --no-pager --format text
        BRAKEMAN_EXIT_CODE=$?
        set -e  # Re-enable exit on error
        
        if [ $BRAKEMAN_EXIT_CODE -eq 0 ]; then
          echo "✅ Brakemanスキャン成功: セキュリティ警告なし"
        elif [ $BRAKEMAN_EXIT_CODE -eq 3 ]; then
          echo "⚠️  Brakeman警告が検出されましたが、既知の警告として継続します"
          echo "警告の詳細は上記の出力を確認してください"
        else
          echo "❌ Brakemanスキャンでエラーが発生しました (exit code: $BRAKEMAN_EXIT_CODE)"
          exit $BRAKEMAN_EXIT_CODE
        fi
    
    - name: Generate Swagger documentation
      env:
        RAILS_ENV: test
        CI: true
        DATABASE_URL: mysql2://root@127.0.0.1:3306/ticket_manager_test
      run: bundle exec rails rswag:specs:swaggerize

  integration:
    name: Integration Check
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download frontend build
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: ./frontend/build/
    
    - name: Verify build artifacts
      run: |
        echo "Frontend build size:"
        du -sh frontend/build/
        echo "Backend swagger docs:"
        ls -la backend/swagger/v1/ || echo "Swagger docs not found" 